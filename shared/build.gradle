plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'jacoco'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id  'kotlin-parcelize'

}
apply from: '../jacoco.gradle'

android {
    compileSdkVersion Versions.compilveSdk

    defaultConfig {
        minSdkVersion Versions.minSdk
        targetSdkVersion Versions.targetSdk
        versionCode Versions.code
        versionName Versions.name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            versionNameSuffix "-debug"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            testCoverageEnabled true
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            testCoverageEnabled true

        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

kapt {
    correctErrorTypes true

    //see here : https://github.com/google/dagger/issues/2684
    javacOptions {
        // These options are normally set automatically via the Hilt Gradle plugin, but we
        // set them manually to workaround a bug in the Kotlin 1.5.20
        option("-Adagger.fastInit=ENABLED")
        option("-Adagger.hilt.android.internal.disableAndroidSuperclassValidation=true")
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation LibsCommon.core_ktx
    implementation LibsCommon.appcompat
    implementation LibsCommon.material

    //firebase
    api platform(Libs.firebase_bom_platfrom)
    api Libs.firebase_auth
    api Libs.firebase_firestore
    api Libs.firebase_messaging
    api Libs.firebase_analytics
    api Libs.firebase_storage
    implementation Libs.kotlinx_coroutines_play_service

    //paging
    api Libs.paging3

    //timber
    api LibsUtils.timber

    //retrofit
    implementation Libs.retrofit
    implementation Libs.retrofit_converter_gson
    implementation Libs.retrofit_converter_scalar

    //coroutine
    api Libs.coroutine

    //room
    implementation Libs.room_runtime
    kapt Libs.room_compiler_kapt
    implementation Libs.room_ktx
    testImplementation Libs.room_testing_test

    api Libs.dataStore

    api Libs.store4

    //hilt
    implementation Libs.hilt_android
    kapt Libs.hilt_compiler_kapt //also do this in app

    debugApi LibsTest.androidx_test_core_ktx

    //test-core
    debugApi Libs.fragment_scenario_debug
    testImplementation LibsTest.androidx_test_core_ktx

    //junit
    testImplementation LibsTest.androidx_test_junit_test

    //truth
    testImplementation LibsTest.truth_test
    testImplementation LibsTest.androidx_test_truth_test

    //test-runner
    testImplementation LibsTest.androidx_test_runner_test

    //test-rules
    testImplementation LibsTest.androidx_test_rules_test

    //espresso-core
    testImplementation LibsTest.androidx_test_espresso_core_test

    //espresso-web
    testImplementation LibsTest.androidx_test_espresso_web_test

    //espresso-contrib
    testImplementation LibsTest.androidx_test_espresso_contrib_test

    //espresso-intent
    testImplementation LibsTest.androidx_test_espresso_intent_test

    //unit test suite
    testImplementation LibsTest.junit_4_test

    //mockito
    testImplementation LibsTest.mockito_test
    testImplementation LibsTest.mockito_kotlin_test
    testImplementation LibsTest.mockito_inline_test

    //hilt
    testImplementation LibsTest.hilt_android_testing
    kaptTest LibsTest.hilt_android_compiler

    testImplementation LibsTest.mockwebserver

    //flow test
    testImplementation LibsTest.turbine

    //coroutine test
    testImplementation LibsTest.coroutine_test

}

tasks.withType(Test) {
    jacoco.excludes = ['jdk.internal.*'] // see related issue https://github.com/gradle/gradle/issues/5184#issuecomment-457865951
}