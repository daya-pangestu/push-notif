// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = "1.5.20"
    ext.jacoco_version = "0.8.5"
    repositories {
        google()
        jcenter()
        mavenCentral()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.dagger:hilt-android-gradle-plugin:2.28-alpha'//dependency injection

        classpath "com.google.gms:google-services:4.3.8"
        classpath "com.google.firebase:firebase-crashlytics-gradle:2.7.1"
        classpath "org.jacoco:org.jacoco.core:0.8.6" //jacoco in root

        classpath "com.vanniktech:gradle-android-junit-jacoco-plugin:0.16.0" //automate add jacoco in each module

        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.0"//sonarcloud scanner

        classpath "gradle.plugin.com.browserstack.gradle:browserstack-gradle-plugin:3.0.2"//cloud ui test

    }
}
plugins {
    id "com.vanniktech.android.junit.jacoco" version "0.16.0"
    id "org.sonarqube" version "3.0"
}




allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

//jacocoRootReport for debug, TODO dynamically rename root report for each variant
task jacocoRootReportDebug(type: JacocoReport, group: 'Coverage reports',dependsOn: [":app:jacocoTestReportDebug",":shared:jacocoTestReportDebug"]) {
    description = 'Generates an aggregate report from all subprojects'

    sourceDirectories.from = files([
            tasks.getByPath("app:jacocoTestReportDebug").sourceDirectories,
            tasks.getByPath("shared:jacocoTestReportDebug").sourceDirectories])
    classDirectories.from = files([
            tasks.getByPath("app:jacocoTestReportDebug").classDirectories,
            tasks.getByPath("shared:jacocoTestReportDebug").classDirectories])

    executionData.from = files([
            tasks.getByPath("app:jacocoTestReportDebug").executionData,
            tasks.getByPath("shared:jacocoTestReportDebug").executionData])

    reports {
        html.enabled = true // human readable
        xml.enabled = true // required by coveralls
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "com.daya.taha"
        property "sonar.organization", "taha-tugas-akhir-haha"
        property "sonar.host.url", "https://sonarcloud.io"

        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.coverage.jacoco.xmlReportPaths","${projectDir}/build/reports/jacoco/jacocoRootReportDebug/jacocoRootReportDebug.xml"

        property "sonar.junit.reportPaths", "**/build/test-results/TEST-*.xml"
        //for local test
//      property "sonar.login", "admin"
//      property "sonar.password", "admin"
    }
}

tasks.sonarqube.dependsOn "jacocoRootReportDebug"

junitJacoco {
    jacocoVersion = '0.8.6' // type String
    excludes =[
            '**/*hilt*.*'
    ]// type String List
    includeNoLocationClasses = true // type boolean
}